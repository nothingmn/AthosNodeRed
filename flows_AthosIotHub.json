[{"id":"d1652d7f.bc5368","type":"tab","label":"System","disabled":false,"info":""},{"id":"4897ff02.3b57","type":"tab","label":"UI","disabled":false,"info":""},{"id":"5fe38bd6.a9e1a4","type":"tab","label":"Backup","disabled":false,"info":""},{"id":"1fd1dcb7.25cbf3","type":"mqtt-broker","z":"","name":"AthosIoT Broker (local)","broker":"localhost","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"99edd1f1.bbc51","type":"websocket-listener","z":"","path":"iot/sensors","wholemsg":"false"},{"id":"9b0ff677.8cfad","type":"websocket-listener","z":"","path":"/ws/athos","wholemsg":"false"},{"id":"f417d62b.4aaa08","type":"udp in","z":"d1652d7f.bc5368","name":"","iface":"","port":"3000","ipv":"udp4","multicast":"true","group":"255.255.255.255","datatype":"utf8","x":150,"y":200,"wires":[["c46b033e.aa748","872b85d2.49a93","5f50790f.7564a8"]]},{"id":"470568ab.3b7f","type":"udp out","z":"d1652d7f.bc5368","name":"","addr":"","iface":"","port":"","ipv":"udp4","outport":"","base64":false,"multicast":"false","x":670,"y":200,"wires":[]},{"id":"c46b033e.aa748","type":"function","z":"d1652d7f.bc5368","name":"Form response packet","func":"var deviceid = msg.payload;\n\nvar ip = global.get(\"host-ip\");\nmsg.payload.wifi = global.get('wifi');\n\nmsg.payload.mqtt = {\n    server : ip,\n    port : \"1883\",\n    username : \"\",\n    password : \"\",\n    sensor : \"iot/raw/sensors/\" + deviceid,\n    relay : \"iot/relays/\" + deviceid,\n    ping : \"iot/raw/ping/\" + deviceid,\n    motion : \"iot/raw/motion/\" + deviceid\n}\n\ndevices = global.get(\"iot-devices\");\n\nif(devices && deviceid) {\n   for(var d in devices) {\n       var device = devices[d];\n       if(device.deviceid === deviceid) {\n            msg.payload.device = device;\n            device.wifi = msg.payload.wifi;\n            device.mqtt = msg.payload.mqtt;\n        }\n   }\n}\n\nmsg.port = 3001;\nmsg.payload = JSON.stringify(msg.payload);\nreturn msg;","outputs":1,"noerr":0,"x":480,"y":200,"wires":[["872b85d2.49a93","470568ab.3b7f"]]},{"id":"872b85d2.49a93","type":"debug","z":"d1652d7f.bc5368","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":650,"y":260,"wires":[]},{"id":"e08e5580.998438","type":"mqtt out","z":"d1652d7f.bc5368","name":"","topic":"","qos":"","retain":"","broker":"1fd1dcb7.25cbf3","x":450,"y":360,"wires":[]},{"id":"3b1358c2.c271e8","type":"debug","z":"d1652d7f.bc5368","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":450,"y":420,"wires":[]},{"id":"a5ec1617.463a78","type":"function","z":"d1652d7f.bc5368","name":"","func":"msg.payload = global.get(\"iot-devices\");\n\nreturn msg;","outputs":1,"noerr":0,"x":850,"y":400,"wires":[["7833e01d.14ba88","3eb5dd19.3ce802"]]},{"id":"3b40738d.a1bfb4","type":"inject","z":"d1652d7f.bc5368","name":"List all devices","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":660,"y":400,"wires":[["a5ec1617.463a78"]]},{"id":"7833e01d.14ba88","type":"debug","z":"d1652d7f.bc5368","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1010,"y":400,"wires":[]},{"id":"7c2b536f.bdedd4","type":"mqtt in","z":"d1652d7f.bc5368","name":"","topic":"iot/raw/sensors/+","qos":"2","datatype":"utf8","broker":"1fd1dcb7.25cbf3","x":120,"y":360,"wires":[["e791c8c8.a5ab4"]]},{"id":"40aa1297.60f244","type":"inject","z":"d1652d7f.bc5368","name":"Get machine ip address","topic":"","payload":"","payloadType":"date","repeat":"3600","crontab":"","once":true,"onceDelay":0.1,"x":170,"y":660,"wires":[["cc4f8bb4.194f8"]]},{"id":"cc4f8bb4.194f8","type":"exec","z":"d1652d7f.bc5368","command":"hostname -I ","addpay":false,"append":"","useSpawn":"false","timer":"","oldrc":false,"name":"","x":410,"y":660,"wires":[["55fb340e.6a326c"],[],[]]},{"id":"55fb340e.6a326c","type":"function","z":"d1652d7f.bc5368","name":"Parse and store in flow","func":"\nif(msg && msg.payload) {\n    msg.payload = msg.payload.trim();\n    var space = msg.payload.indexOf(\" \");\n    if(space > 0) {\n        var ips = msg.payload.split(\" \");\n        for(var i in ips) {\n            var ip = ips[i];\n            if(!ip.startsWith(\"10.3.\")) {\n                msg.payload = ip;\n            }\n        }\n    }\n}\n\n\n\nglobal.set(\"host-ip\", msg.payload);\n\n\nreturn msg;","outputs":1,"noerr":0,"x":640,"y":660,"wires":[["6f528aee.9c2c9c"]]},{"id":"6f528aee.9c2c9c","type":"debug","z":"d1652d7f.bc5368","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":830,"y":660,"wires":[]},{"id":"20658bb2.b5b3ec","type":"comment","z":"d1652d7f.bc5368","name":"Automatic Node Configuration","info":"Nodes broadcast a UDP packet to get their config from node-red.  This allows for the nodes to automatically pickup their configuration off of the network.","x":160,"y":40,"wires":[]},{"id":"454323bb.b098c4","type":"comment","z":"d1652d7f.bc5368","name":"Preprocessing senor and motion data","info":"Incoming data from the nodes in relatively raw format so we take time now to pre-process and clean up the incoming telemetry.","x":190,"y":320,"wires":[]},{"id":"23a73932.b5ee06","type":"comment","z":"d1652d7f.bc5368","name":"Grab the IP address of our hub","info":"","x":170,"y":620,"wires":[]},{"id":"1f4197f.8e709e8","type":"catch","z":"d1652d7f.bc5368","name":"","scope":null,"uncaught":false,"x":640,"y":460,"wires":[["cbf4f26e.fe3f78","aeddd8d.0e740a8"]]},{"id":"cbf4f26e.fe3f78","type":"mqtt out","z":"d1652d7f.bc5368","name":"","topic":"athos/error/system","qos":"2","retain":"false","broker":"1fd1dcb7.25cbf3","x":850,"y":460,"wires":[]},{"id":"b4facb38.6e2c68","type":"function","z":"4897ff02.3b57","name":"update-wifi","func":"\nif(msg && msg.payload && msg.payload.ssid && msg.payload.ssid) {\n    global.set('wifi', msg.payload) ;\n}\n\n\nreturn msg;","outputs":1,"noerr":0,"x":730,"y":60,"wires":[["625e1945.5b21e"]]},{"id":"625e1945.5b21e","type":"file","z":"4897ff02.3b57","name":"","filename":"wifi.settings.json","appendNewline":false,"createDir":false,"overwriteFile":"true","encoding":"none","x":940,"y":60,"wires":[["b613193b.6ac128"]]},{"id":"dcf7ba7.c1af848","type":"file in","z":"4897ff02.3b57","name":"","filename":"wifi.settings.json","format":"utf8","chunk":false,"sendError":false,"encoding":"none","x":350,"y":400,"wires":[["570b6236.f65124"]]},{"id":"57423abd.784434","type":"inject","z":"4897ff02.3b57","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"onceDelay":0.1,"x":150,"y":400,"wires":[["dcf7ba7.c1af848"]]},{"id":"828ea064.671578","type":"debug","z":"4897ff02.3b57","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":810,"y":400,"wires":[]},{"id":"570b6236.f65124","type":"function","z":"4897ff02.3b57","name":"Parse JSON settings","func":"\nif(msg && msg.payload && typeof msg.payload === \"string\") {\n    msg.payload = JSON.parse(msg.payload);\n    global.set(\"wifi\", msg.payload);\n}\n\n\nreturn msg;","outputs":1,"noerr":0,"x":580,"y":400,"wires":[["828ea064.671578","154362d3.60dd55","b613193b.6ac128"]]},{"id":"d9bd61de.82b27","type":"link in","z":"4897ff02.3b57","name":"GetWifiSettings_Start","links":[],"x":195,"y":460,"wires":[["dcf7ba7.c1af848"]]},{"id":"154362d3.60dd55","type":"link out","z":"4897ff02.3b57","name":"GetWifiSettings_End","links":[],"x":780,"y":480,"wires":[]},{"id":"b39d66ca.99ed1","type":"http in","z":"4897ff02.3b57","name":"","url":"/api/devices","method":"get","upload":false,"swaggerDoc":"","x":280,"y":540,"wires":[["8ddb364e.b21c48"]]},{"id":"48576efa.98c75","type":"http response","z":"4897ff02.3b57","name":"","statusCode":"","headers":{},"x":600,"y":540,"wires":[]},{"id":"8ddb364e.b21c48","type":"function","z":"4897ff02.3b57","name":"","func":"msg.payload = global.get(\"iot-devices\");\n\nif(!msg.payload) msg.payload = {};\n\nmsg.payload.ts = new Date();\n\nreturn msg;","outputs":1,"noerr":0,"x":450,"y":540,"wires":[["48576efa.98c75"]]},{"id":"aeddd8d.0e740a8","type":"debug","z":"d1652d7f.bc5368","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":810,"y":520,"wires":[]},{"id":"c1a536a8.facc98","type":"websocket in","z":"4897ff02.3b57","name":"","server":"9b0ff677.8cfad","client":"","x":90,"y":100,"wires":[["3ba9a612.faae72","f01c8b38.af4fa8","2409b8fb.d901"]]},{"id":"2409b8fb.d901","type":"debug","z":"4897ff02.3b57","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":310,"y":40,"wires":[]},{"id":"3ba9a612.faae72","type":"function","z":"4897ff02.3b57","name":"","func":"\n\nif(msg && msg.payload && typeof msg.payload == \"string\") {\n    msg.payload = JSON.parse(msg.payload);\n}\n\n\nreturn msg;","outputs":1,"noerr":0,"x":290,"y":120,"wires":[["2409b8fb.d901","eea7325d.b8ae5"]]},{"id":"eea7325d.b8ae5","type":"switch","z":"4897ff02.3b57","name":"","property":"payload.action","propertyType":"msg","rules":[{"t":"eq","v":"update-wifi","vt":"str"},{"t":"eq","v":"get-wifi","vt":"str"},{"t":"eq","v":"get-devices","vt":"str"},{"t":"eq","v":"wipe-device","vt":"str"},{"t":"eq","v":"reset-device","vt":"str"},{"t":"eq","v":"restart-device","vt":"str"},{"t":"eq","v":"rename-device","vt":"str"},{"t":"eq","v":"ping-device","vt":"str"},{"t":"eq","v":"rename-relay-switch","vt":"str"},{"t":"eq","v":"relay-on","vt":"str"},{"t":"eq","v":"relay-off","vt":"str"},{"t":"eq","v":"all-off","vt":"str"},{"t":"eq","v":"all-on","vt":"str"},{"t":"eq","v":"get-firmware","vt":"str"},{"t":"eq","v":"delete-firmware","vt":"str"},{"t":"eq","v":"update-device-firmware","vt":"str"},{"t":"eq","v":"delete-device","vt":"str"}],"checkall":"false","repair":false,"outputs":17,"x":450,"y":160,"wires":[["b4facb38.6e2c68"],["3f37ee62.0eae4a"],["7b78abfa.eaa43c"],["58144bcf.902c24"],["58144bcf.902c24"],["58144bcf.902c24"],["5ff2fb41.a7784c"],["86841c8d.c396c"],["97a8c70.31ce938","4dd48395.254ef4"],["7da4eb91.f5e25c"],["7da4eb91.f5e25c"],["7da4eb91.f5e25c"],["7da4eb91.f5e25c"],["1a12bc7b.8a2614"],["85123133.f34458"],["d0bac728.c0f2c"],["2b58bd85.ab050a"]]},{"id":"f01c8b38.af4fa8","type":"websocket out","z":"4897ff02.3b57","name":"","server":"9b0ff677.8cfad","client":"","x":260,"y":180,"wires":[]},{"id":"b613193b.6ac128","type":"mqtt out","z":"4897ff02.3b57","name":"","topic":"ui","qos":"","retain":"","broker":"1fd1dcb7.25cbf3","x":1130,"y":100,"wires":[]},{"id":"91d8917a.0d091","type":"mqtt in","z":"4897ff02.3b57","name":"","topic":"ui","qos":"2","datatype":"auto","broker":"1fd1dcb7.25cbf3","x":130,"y":260,"wires":[["f01c8b38.af4fa8","34bce13e.64a8a6"]]},{"id":"3f37ee62.0eae4a","type":"function","z":"4897ff02.3b57","name":"get-wifi","func":"msg.payload = global.get(\"wifi\");\nmsg.payload.action = \"update-wifi\";\nreturn msg;","outputs":1,"noerr":0,"x":740,"y":100,"wires":[["b613193b.6ac128"]]},{"id":"7b78abfa.eaa43c","type":"function","z":"4897ff02.3b57","name":"get-devices","func":"delete msg.payload;\nmsg.payload = {};\nmsg.payload.devices = global.get(\"iot-devices\");\nmsg.payload.action = \"devices-list\";\n\nreturn msg;","outputs":1,"noerr":0,"x":810,"y":140,"wires":[["b613193b.6ac128","a33f283a.660648"]]},{"id":"a33f283a.660648","type":"debug","z":"4897ff02.3b57","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":870,"y":180,"wires":[]},{"id":"34bce13e.64a8a6","type":"debug","z":"4897ff02.3b57","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":270,"y":260,"wires":[]},{"id":"58144bcf.902c24","type":"function","z":"4897ff02.3b57","name":"Device commands","func":"var command = msg.payload.action;\ndelete msg.payload.action;\n\nif(command === \"wipe-device\") {\n    msg.payload.command = \"wipe\";\n}\nif(command === \"reset-device\") {\n    msg.payload.command = \"reset\";\n}\nif(command === \"restart-device\") {\n    msg.payload.command = \"restart\";\n}\n\nmsg.topic = \"iot/relays/\" + msg.payload.deviceid;\n\nreturn msg;","outputs":1,"noerr":0,"x":910,"y":340,"wires":[["7b7385ab.20388c","5460537e.54c124"]]},{"id":"7b7385ab.20388c","type":"debug","z":"4897ff02.3b57","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1070,"y":320,"wires":[]},{"id":"5460537e.54c124","type":"mqtt out","z":"4897ff02.3b57","name":"","topic":"","qos":"2","retain":"false","broker":"1fd1dcb7.25cbf3","x":1070,"y":360,"wires":[]},{"id":"bb6c6b45.4006e","type":"inject","z":"d1652d7f.bc5368","name":"wipe known devices","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":670,"y":360,"wires":[["15543512.cd0d0b"]]},{"id":"15543512.cd0d0b","type":"function","z":"d1652d7f.bc5368","name":"","func":"msg.payload = global.set(\"iot-devices\", []);\n\nreturn msg;","outputs":1,"noerr":0,"x":850,"y":360,"wires":[["ba949875.b33a","3eb5dd19.3ce802"]]},{"id":"ba949875.b33a","type":"debug","z":"d1652d7f.bc5368","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1010,"y":360,"wires":[]},{"id":"98684288.046e","type":"mqtt in","z":"4897ff02.3b57","name":"","topic":"iot/sensors/+","qos":"2","datatype":"json","broker":"1fd1dcb7.25cbf3","x":490,"y":300,"wires":[["7b78abfa.eaa43c"]]},{"id":"5ff2fb41.a7784c","type":"function","z":"4897ff02.3b57","name":"rename device","func":"if(msg && msg.payload && typeof msg.payload == \"string\") {\n    msg.payload = JSON.parse(msg.payload);\n}\n\nvar devices = global.get(\"iot-devices\");\n\nfor(var d in devices) {\n    var device = devices[d];\n    if(device.deviceid == msg.payload.deviceid) {\n        device.name = msg.payload.name;\n        global.set(\"iot-devices\", devices);\n        break;\n    }\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":660,"y":180,"wires":[["7b78abfa.eaa43c","42f653f4.d1e594"]]},{"id":"f518b038.3ba918","type":"mqtt out","z":"d1652d7f.bc5368","name":"","topic":"ui","qos":"","retain":"false","broker":"1fd1dcb7.25cbf3","x":990,"y":260,"wires":[]},{"id":"3eb5dd19.3ce802","type":"function","z":"d1652d7f.bc5368","name":"get-devices","func":"delete msg.payload;\nmsg.payload = {};\nmsg.payload.devices = global.get(\"iot-devices\");\nmsg.payload.action = \"devices-list\";\nreturn msg;","outputs":1,"noerr":0,"x":830,"y":260,"wires":[["f518b038.3ba918"]]},{"id":"86841c8d.c396c","type":"function","z":"4897ff02.3b57","name":"Ping device","func":"delete msg.payload.action\nmsg.topic = \"iot/relays/\" + msg.payload.deviceid;\nmsg.payload.command = \"ping\";\nmsg.payload.ts =  ((new Date()).getTime() / 1000) + \"\";\n\nreturn msg;","outputs":1,"noerr":0,"x":910,"y":480,"wires":[["bdcdab23.0ed658","eccb9f9a.493158"]]},{"id":"bdcdab23.0ed658","type":"mqtt out","z":"4897ff02.3b57","name":"","topic":"","qos":"2","retain":"false","broker":"1fd1dcb7.25cbf3","x":1090,"y":480,"wires":[]},{"id":"5d5cff14.906c68","type":"mqtt in","z":"d1652d7f.bc5368","name":"","topic":"iot/raw/ping/+","qos":"2","datatype":"utf8","broker":"1fd1dcb7.25cbf3","x":110,"y":460,"wires":[["f13469e5.59364"]]},{"id":"f13469e5.59364","type":"function","z":"d1652d7f.bc5368","name":"","func":"var deviceid = msg.topic.split(\"/\")[3];\nmsg.topic = \"iot/ping/\" + deviceid;\n\nvar devices = global.get(\"iot-devices\");\nvar device = getDeviceByDeviceId(devices, deviceid);\nvar parts = msg.payload.split(\",\");\n\ndevice.ping = {\n    version : parts[1],\n    ts : Number(parts[2]),\n    senderTS :  Number(parts[3]),\n    diff : Number(parts[4])\n};\n\nvar date = new Date(0);\ndate.setUTCSeconds(device.ping.ts);\ndevice.ping.timeStamp = date;\ndevice.ping.pongTS =  (new Date().getTime()) / 1000;\ndevice.ping.roundTrip = Number((device.ping.pongTS - device.ping.ts).toFixed(2));\n\n\ndevice.ts = device.ping.ts;\ndevice.timeStamp = device.ping.timeStamp;\n\nglobal.set(\"iot-devices\", devices);\n\nmsg.payload = device;\n\nreturn msg;\n\n\n\n\nfunction getDeviceByDeviceId(devices, deviceid) {\n    for(var d in devices) {\n        var device = devices[d];\n        if(device.deviceid == deviceid) {\n            return device;\n        }\n    }\n    return;\n}","outputs":1,"noerr":0,"x":270,"y":460,"wires":[["18ddb8ee.63ed17","ebf1a288.2dcbb8"]]},{"id":"18ddb8ee.63ed17","type":"debug","z":"d1652d7f.bc5368","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":450,"y":520,"wires":[]},{"id":"ebf1a288.2dcbb8","type":"mqtt out","z":"d1652d7f.bc5368","name":"","topic":"","qos":"","retain":"","broker":"1fd1dcb7.25cbf3","x":450,"y":460,"wires":[]},{"id":"8c146b9f.3a37f8","type":"mqtt in","z":"4897ff02.3b57","name":"","topic":"iot/ping/+","qos":"2","datatype":"json","broker":"1fd1dcb7.25cbf3","x":1100,"y":200,"wires":[["7b78abfa.eaa43c"]]},{"id":"28d499b1.bb5bee","type":"inject","z":"d1652d7f.bc5368","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":620,"y":580,"wires":[["61c2b2d8.4b4f44"]]},{"id":"61c2b2d8.4b4f44","type":"function","z":"d1652d7f.bc5368","name":"","func":"msg.payload = global.get('wifi');\nreturn msg;","outputs":1,"noerr":0,"x":770,"y":580,"wires":[["1aac35b1.c4f512"]]},{"id":"1aac35b1.c4f512","type":"debug","z":"d1652d7f.bc5368","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":910,"y":580,"wires":[]},{"id":"eccb9f9a.493158","type":"debug","z":"4897ff02.3b57","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1090,"y":540,"wires":[]},{"id":"97a8c70.31ce938","type":"debug","z":"4897ff02.3b57","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":670,"y":340,"wires":[]},{"id":"4dd48395.254ef4","type":"function","z":"4897ff02.3b57","name":"rename-relay-switch","func":"if(msg && msg.payload && typeof msg.payload == \"string\") {\n    msg.payload = JSON.parse(msg.payload);\n}\n\nvar devices = global.get(\"iot-devices\");\n\nvar found = false;\nfor(var d in devices) {\n    var device = devices[d];\n    if(device.deviceid === msg.payload.device.deviceid) {\n        for(var r in device.relay) {\n            var relay = device.relay[r];\n            if(relay.id === msg.payload.relay.id) {\n                relay.name = msg.payload.relay.name;\n                found = true;\n                break;\n            }\n        }\n    }\n    if(found) break;\n}\n\nglobal.set(\"iot-devices\", devices);\n\nreturn msg;","outputs":1,"noerr":0,"x":440,"y":340,"wires":[["97a8c70.31ce938","7b78abfa.eaa43c"]]},{"id":"7da4eb91.f5e25c","type":"function","z":"4897ff02.3b57","name":"Relay on and off","func":"\nmsg.topic = \"iot/relays/\" + msg.payload.deviceid;\n\nvar pin = 0;\n\nif(msg.payload.relay) {\n    pin = msg.payload.relay;\n    if(pin.startsWith(\"D\")) {\n        pin = pin.substr(1);\n    }\n}\n\nvar command = \"on\";\nif(msg.payload.action == \"relay-off\") command = \"off\";\nif(msg.payload.action == \"all-off\") command = \"alloff\";\nif(msg.payload.action == \"all-on\") command = \"allon\";\n\nmsg.payload = { \"command\": command ,\"pin\" : Number(pin)}\n\ndelete msg._session;\ndelete msg._msgid;\n\n\nreturn msg;","outputs":1,"noerr":0,"x":840,"y":260,"wires":[["578113c5.4dfadc","7b7385ab.20388c"]]},{"id":"578113c5.4dfadc","type":"mqtt out","z":"4897ff02.3b57","name":"Relay on and off","topic":"","qos":"2","retain":"false","broker":"1fd1dcb7.25cbf3","x":1220,"y":280,"wires":[]},{"id":"42f653f4.d1e594","type":"debug","z":"4897ff02.3b57","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":870,"y":220,"wires":[]},{"id":"99e6d075.b5124","type":"mqtt out","z":"4897ff02.3b57","name":"","topic":"ui","qos":"","retain":"","broker":"1fd1dcb7.25cbf3","x":1130,"y":760,"wires":[]},{"id":"bb4e8402.fb4cc","type":"exec","z":"4897ff02.3b57","command":"ls /home/pi/.node-red/firmware/","addpay":true,"append":"","useSpawn":"false","timer":"5","oldrc":false,"name":"","x":890,"y":720,"wires":[["105a1241.c0f4c6"],[],[]]},{"id":"105a1241.c0f4c6","type":"function","z":"4897ff02.3b57","name":"firmware-list","func":"var root = \"/home/pi/.node-red/firmware/\";\n\nvar list = msg.payload.split(\"\\n\");\nvar newList = [];\nfor(var l in list) {\n    var item = list[l];\n    if(item !== \"\" && !item.startsWith(root)) {\n        newList.push(item);\n    }\n}\n\nmsg.payload = { action : \"firmware-list\", list : newList };\n\n\n\nreturn msg;","outputs":1,"noerr":0,"x":910,"y":820,"wires":[["7d6983d4.be808c","99e6d075.b5124"]]},{"id":"7d6983d4.be808c","type":"debug","z":"4897ff02.3b57","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1090,"y":840,"wires":[]},{"id":"1a12bc7b.8a2614","type":"function","z":"4897ff02.3b57","name":"get-firmware","func":"\n\nreturn msg;","outputs":1,"noerr":0,"x":670,"y":640,"wires":[["bb4e8402.fb4cc"]]},{"id":"85123133.f34458","type":"function","z":"4897ff02.3b57","name":"delete-firmware","func":"var root = \"/home/pi/.node-red/firmware/\";\nvar path = msg.payload.path;\n\nmsg.payload = \"rm -rf \" + root + path;\n\nreturn msg;","outputs":1,"noerr":0,"x":560,"y":760,"wires":[["25c90beb.3df29c"]]},{"id":"25c90beb.3df29c","type":"exec","z":"4897ff02.3b57","command":"","addpay":true,"append":"","useSpawn":"false","timer":"5","oldrc":false,"name":"","x":630,"y":840,"wires":[["bb4e8402.fb4cc"],[],[]]},{"id":"c2d4765e.85208","type":"http in","z":"4897ff02.3b57","name":"","url":"/upload","method":"post","upload":true,"swaggerDoc":"","x":530,"y":960,"wires":[["6dec8d42.c24b0c","312fd492.6ed1ec"]]},{"id":"6dec8d42.c24b0c","type":"http response","z":"4897ff02.3b57","name":"","statusCode":"200","headers":{},"x":750,"y":960,"wires":[]},{"id":"312fd492.6ed1ec","type":"function","z":"4897ff02.3b57","name":"","func":"var root = \"/home/pi/.node-red/firmware/\";\n\n\nif(msg && msg.req && msg.req.files) {\n    for(var f in msg.req.files) {\n        var file = msg.req.files[f];\n        if(file.buffer) {\n            node.send( {\n                filename : root + file.originalname,\n                encoding : file.encoding,\n                payload : file.buffer\n            });\n        }\n    }\n}\n\n\nreturn;","outputs":1,"noerr":0,"x":750,"y":1020,"wires":[["ca3b8a1.aae21f8"]]},{"id":"ca3b8a1.aae21f8","type":"file","z":"4897ff02.3b57","name":"","filename":"","appendNewline":false,"createDir":false,"overwriteFile":"true","encoding":"none","x":890,"y":1020,"wires":[["bb4e8402.fb4cc"]]},{"id":"d0bac728.c0f2c","type":"function","z":"4897ff02.3b57","name":"update-device-firmware","func":"var ip = global.get(\"host-ip\");\n\n\nvar payload = { \"command\" : \"upgrade\", \"host\" : ip, port:1880, \"path\" : \"/firmware?file=\" + msg.payload.path }\nvar deviceid = msg.payload.deviceid;\n\nmsg = {\n    \"topic\" :  \"iot/relays/\" + deviceid,\n    \"payload\" : payload\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":170,"y":620,"wires":[["114cce67.07ad82","810221a4.e186b8"]]},{"id":"114cce67.07ad82","type":"debug","z":"4897ff02.3b57","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":390,"y":620,"wires":[]},{"id":"810221a4.e186b8","type":"mqtt out","z":"4897ff02.3b57","name":"","topic":"","qos":"","retain":"","broker":"1fd1dcb7.25cbf3","x":390,"y":680,"wires":[]},{"id":"cd47e221.a5323","type":"http in","z":"4897ff02.3b57","name":"","url":"/firmware","method":"get","upload":true,"swaggerDoc":"","x":250,"y":1060,"wires":[["6322af5f.8d298"]]},{"id":"22553fe3.109cb","type":"http response","z":"4897ff02.3b57","name":"","statusCode":"","headers":{},"x":710,"y":1180,"wires":[]},{"id":"6322af5f.8d298","type":"function","z":"4897ff02.3b57","name":"","func":"var root = \"/home/pi/.node-red/firmware/\";\n\nif(msg.payload.file) {\n    msg.filename = root + msg.payload.file;\n}\nmsg.headers = [];\n\nmsg.headers['Content-Disposition'] = 'Content-Disposition to attachment; filename= ' + msg.payload.file;\nmsg.headers['Content-Type'] = 'application/octet-stream';\nmsg.headers['Content-Description'] = 'File Transfer';\nmsg.headers['Content-Transfer-Encoding'] = 'binary';\n\nreturn msg;","outputs":1,"noerr":0,"x":450,"y":1060,"wires":[["b49ef360.6dac7"]]},{"id":"447ba2bd.33a1b4","type":"debug","z":"4897ff02.3b57","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":770,"y":1100,"wires":[]},{"id":"b49ef360.6dac7","type":"file in","z":"4897ff02.3b57","name":"","filename":"","format":"","chunk":false,"sendError":false,"encoding":"none","x":610,"y":1100,"wires":[["22553fe3.109cb","447ba2bd.33a1b4"]]},{"id":"5f50790f.7564a8","type":"debug","z":"d1652d7f.bc5368","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":330,"y":260,"wires":[]},{"id":"b814cdcb.229168","type":"function","z":"d1652d7f.bc5368","name":"","func":"if(msg.payload && msg.payload.deviceid) {\n    msg.payload = msg.payload.deviceid;\n}\n\n\nreturn msg;","outputs":1,"noerr":0,"x":530,"y":120,"wires":[["eb89a2be.40f2f","4f5dd015.33afb"]]},{"id":"e49cbc09.b4b02","type":"http in","z":"d1652d7f.bc5368","name":"","url":"configure","method":"get","upload":false,"swaggerDoc":"","x":340,"y":120,"wires":[["b814cdcb.229168","84114d0b.89ea78"]]},{"id":"eb89a2be.40f2f","type":"function","z":"d1652d7f.bc5368","name":"Form response packet","func":"var deviceid = msg.payload;\nmsg.payload = {};\nvar ip = global.get(\"host-ip\");\nmsg.payload.wifi = global.get('wifi');\n\nmsg.payload.mqtt = {\n    server : ip,\n    port : \"1883\",\n    username : \"\",\n    password : \"\",\n    sensor : \"iot/raw/sensors/\" + deviceid,\n    relay : \"iot/relays/\" + deviceid,\n    ping : \"iot/raw/ping/\" + deviceid,\n    motion : \"iot/raw/motion/\" + deviceid\n}\n\ndevices = global.get(\"iot-devices\");\n\nif(devices && deviceid) {\n   for(var d in devices) {\n       var device = devices[d];\n       if(device.deviceid === deviceid) {\n            msg.payload.device = device;\n            device.wifi = msg.payload.wifi;\n            device.mqtt = msg.payload.mqtt;\n        }\n   }\n}\n\nmsg.port = 3001;\nmsg.payload = JSON.stringify(msg.payload) + \"\\n\";\nif(!msg.headers) msg.headers = [];\nmsg.headers[\"Content-Type\"] = \"application/json\";\n\nreturn msg;\n\n\n\n\n\n\n","outputs":1,"noerr":0,"x":740,"y":120,"wires":[["f95376c5.a5d09","a07dca3d.a2031"]]},{"id":"f95376c5.a5d09","type":"http response","z":"d1652d7f.bc5368","name":"","statusCode":"","headers":{},"x":930,"y":120,"wires":[]},{"id":"84114d0b.89ea78","type":"debug","z":"d1652d7f.bc5368","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":470,"y":40,"wires":[]},{"id":"4f5dd015.33afb","type":"debug","z":"d1652d7f.bc5368","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":650,"y":40,"wires":[]},{"id":"a07dca3d.a2031","type":"debug","z":"d1652d7f.bc5368","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":870,"y":40,"wires":[]},{"id":"2b58bd85.ab050a","type":"function","z":"4897ff02.3b57","name":"delete-device","func":"var deviceid = msg.payload.deviceid;\n\nvar devices = global.get(\"iot-devices\");\n\nvar item = null;\nfor(var d in devices) {\n    var device = devices[d];\n    if(device.deviceid === deviceid) {\n        item = device;\n        devices.splice(d, 1);\n        break;\n    }\n}\n\nglobal.set(\"iot-devices\", devices);\n\nreturn msg;","outputs":1,"noerr":0,"x":370,"y":740,"wires":[["7b78abfa.eaa43c"]]},{"id":"e791c8c8.a5ab4","type":"function","z":"d1652d7f.bc5368","name":"","func":"msg.raw = msg.payload;\nvar deviceid = msg.topic.split(\"/\")[3];\nmsg.topic = \"iot/sensors/\" + deviceid;\nvar devices = global.get(\"iot-devices\");\n\nvar device = getDeviceByDeviceId(deviceid);\n\nif(!device) {\n    device = { deviceid : deviceid, name : \"Unknown\" };\n    devices.push(device);\n}\n\nif(msg.payload) {\n    if(msg.payload[0] == \"{\") {\n        msg.payload = JSON.parse(msg.payload);    \n    } else {\n        //convert our CSV payload to object\n        var raw = msg.payload;\n        var parts = msg.payload.split(\",\");\n        device = parseDeviceMessages(device, parts);\n    }\n}\n\nglobal.set(\"iot-devices\", devices);\n\nmsg.payload = device;\n\nreturn msg;\n\n\n\n\nfunction getDeviceByDeviceId(deviceid) {\n    var devices = global.get(\"iot-devices\");\n    for(var d in devices) {\n        var device = devices[d];\n        if(device.deviceid == deviceid) {\n            return device;\n        }\n    }\n    return;\n}\n\n\n\nfunction parseDeviceMessages(device, parts) {\n\n    device.version = parts[1];\n    device.ts = Number(parts[2]);\n    var date = new Date(0);\n    date.setUTCSeconds(device.ts);\n    device.timeStamp = date;\n    \n    switch(parts[0]) {\n        case \"RELAY\" :\n            device = parseRELAY(device, parts);\n            break;\n        case \"BMP280\" :\n            device = parseBMP280(device, parts);\n            break;\n        case \"DHT22\" :\n            device = parseDHT22(device, parts);\n            break;\n        case \"DHT11\" :\n            device = parseDHT11(device, parts);\n            break;\n        case \"PIR\" :\n            device = parsePIR(device, parts);\n            break;\n        case \"TMP36\" :\n            device = parseTMP36(device, parts);\n            break;\n        case \"MOIST\" :\n            device = parseMoisture(device, parts);\n            break;\n        case \"MQ2\" :\n            device = parseMQ2(device, parts);\n            break;\n        case \"MQ135\" :\n            device = parseMQ135(device, parts);\n            break;\n        case \"MQ9\" :\n            device = parseMQ9(device, parts);\n            break;\n        case \"MQ8\" :\n            device = parseMQ8(device, parts);\n            break;\n        case \"MQ7\" :\n            device = parseMQ7(device, parts);\n            break;\n        case \"MQ6\" :\n            device = parseMQ6(device, parts);\n            break;\n        case \"MQ5\" :\n            device = parseMQ5(device, parts);\n            break;\n        case \"MQ4\" :\n            device = parseMQ4(device, parts);\n            break;\n        case \"MQ3\" :\n            device = parseMQ3(device, parts);\n            break;\n        case \"DDD\" :\n            device = parseDeviceData(device, parts);\n            break;\n        case \"DDN\" :\n            device = parseNetworkData(device, parts);\n            break;\n        case \"DDV\" :\n            device = parseVersionData(device, parts);\n            break;\n        case \"BUT\" :\n            device = parseButton(device, parts);\n            break;\n        case \"NeoPixel\" :\n            device = parseNeoPixel(device, parts);\n            break;\n        default:\n            break;\n    } \n    return device;\n}\n\nfunction parseVersionData(device, parts) {\n        // \"DDV,\" +\n        // getVersion() + \",\" +\n        // ts + \",\" +\n        // ESP.getCoreVersion() + \",\" +\n        // ESP.getSdkVersion());\n    \n    if(!device.system) device.system={};\n    device.system.coreVersion = parts[3];\n    device.system.sdkVersion = parts[4];\n\n    return device;\n}\n\nfunction map (num, in_min, in_max, out_min, out_max) {\n  return (num - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n}\n\nfunction parseNeoPixel(device, parts) {\n    //String csv = String(\"NeoPixel,\" + getVersion() + \",\" + ts + \",\" + PixelPin + \",\" + PixelCount + \",\" +  _NeoPixel_deviceId);\n    device.NeoPixel = {\n        Pin : Number(parts[3]),\n        Count : Number(parts[4])\n    };\n    if(device.type) {\n        if(!device.type.includes(\"NeoPixel\")) {\n            device.type += \",NeoPixel\";\n        }\n    } else {\n        device.type = \"NeoPixel\";\n    }\n    return device;\n}\n\nfunction parseButton(device, parts) {\n        //\"BUT,1.0.20200425.19.41,1587868960,D0:0,D1:0,D2:0,969386\n    device.button = {\n    };\n    var deviceId = device.deviceid;\n    for(var p = 3; p<=parts.length-1;p++) {\n        var part = parts[p];\n        if(part != deviceId) {\n            var buttonParts = part.split(\":\");\n            device.button[buttonParts[0]] = (buttonParts[1] === \"0\") ? false : true;\n        }\n    }\n    if(device.type) {\n        if(!device.type.includes(\"BUTTON\")) {\n            device.type += \",BUTTON\";\n        }\n    } else {\n        device.type = \"BUTTON\";\n    }\n    return device;\n}\nfunction parseNetworkData(device, parts) {\n        // \"DDN,\" +\n        // getVersion() + \",\" +\n        // ts + \",\" +\n        // rssi + \",\" +\n        // WiFi.localIP().toString() + \",\" +\n        // WiFi.macAddress() + \",\" +\n        // WiFi.gatewayIP().toString() + \",\" +\n        // WiFi.SSID());\n    \n    if(!device.system) device.system={};\n    device.system.rssi = parts[3];\n    device.system.localIP = parts[4];\n    device.system.macAddress = parts[5];\n    device.system.gatewayIP = parts[6];\n    device.system.SSID = parts[7];\n    \n    if(device.system.rssi) {\n        \n        var val = Math.abs(device.system.rssi);\n\n        //https://www.adriangranados.com/blog/dbm-to-percent-conversion\n        var rssimap = { \"-1\" : 100, \"-2\" : 100, \"-3\" : 100, \"-4\" : 100, \"-5\" : 100, \"-6\" : 100, \"-7\" : 100, \"-8\" : 100, \"-9\" : 100, \"-10\" : 100, \"-11\" : 100, \"-12\" : 100, \"-13\" : 100, \"-14\" : 100, \"-15\" : 100, \"-16\" : 100, \"-17\" : 100, \"-18\" : 100, \"-19\" : 100, \"-20\" : 100, \"-21\" : 99, \"-22\" : 99, \"-23\" : 99, \"-24\" : 98, \"-25\" : 98, \"-26\" : 98, \"-27\" : 97, \"-28\" : 97, \"-29\" : 96, \"-30\" : 96, \"-31\" : 95, \"-32\" : 95, \"-33\" : 94, \"-34\" : 93, \"-35\" : 93, \"-36\" : 92, \"-37\" : 91, \"-38\" : 90, \"-39\" : 90, \"-40\" : 89, \"-41\" : 88, \"-42\" : 87, \"-43\" : 86, \"-44\" : 85, \"-45\" : 84, \"-46\" : 83, \"-47\" : 82, \"-48\" : 81, \"-49\" : 80, \"-50\" : 79, \"-51\" : 78, \"-52\" : 76, \"-53\" : 75, \"-54\" : 74, \"-55\" : 73, \"-56\" : 71, \"-57\" : 70, \"-58\" : 69, \"-59\" : 67, \"-60\" : 66, \"-61\" : 64, \"-62\" : 63, \"-63\" : 61, \"-64\" : 60, \"-65\" : 58, \"-66\" : 56, \"-67\" : 55, \"-68\" : 53, \"-69\" : 51, \"-70\" : 50, \"-71\" : 48, \"-72\" : 46, \"-73\" : 44, \"-74\" : 42, \"-75\" : 40, \"-76\" : 38, \"-77\" : 36, \"-78\" : 34, \"-79\" : 32, \"-80\" : 30, \"-81\" : 28, \"-82\" : 26, \"-83\" : 24, \"-84\" : 22, \"-85\" : 20, \"-86\" : 17, \"-87\" : 15, \"-88\" : 13, \"-89\" : 10, \"-90\" : 8, \"-91\" : 6, \"-92\" : 3, \"-93\" : 1, \"-94\" : 1, \"-95\" : 1, \"-96\" : 1, \"-97\" : 1, \"-98\" : 1, \"-99\" : 1, \"-100\" : 1 }\n        for(var key in rssimap) {\n            var value = rssimap[key];\n            var keyNum = Number(key);\n            if(keyNum <= device.system.rssi) {\n                device.system.rssi_percent = value;\n                break;\n            }            \n        }\n        \n        \n        if(val >= 90) {\n            device.system.rssi_strength = { title : \"Unusable\", desc : \"Approaching or drowning in the noise floor. Any functionality is highly unlikely.\" };\n        } else if(val >= 80 && val < 90) {\n            device.system.rssi_strength = { title : \"Not Good\", desc : \"Minimum signal strength for basic connectivity. Packet delivery may be unreliable.\" };\n        } else if(val >= 70 && val < 80) {\n            device.system.rssi_strength = { title : \"Okay\", desc : \"Minimum signal strength for reliable packet delivery.\" };\n        } else if(val >= 67 && val < 70) {\n            device.system.rssi_strength = { title : \"Very Good\", desc : \"Minimum signal strength for applications that require very reliable, timely delivery of data packets.\" };\n        } else {\n            device.system.rssi_strength = { title : \"Amazing\", desc : \"Max achievable signal strength. The client can only be a few feet from the AP to achieve this. Not typical or desirable in the real world.\" };\n        }\n    }\n    \n\n    return device;\n}\nfunction parseDeviceData(device, parts) {\n    //     \"DDD,\" + \n    // getVersion() + \",\" + \n    // ts + \",\" +\n    // ESP.getChipId() + \",\" +\n    // ESP.getCpuFreqMHz() + \",\" +\n    // ESP.getFlashChipVendorId() + \",\" +\n    // ESP.getFreeSketchSpace() + \",\" +\n    // ESP.getSketchMD5() + \",\" +\n    // ESP.getVcc() + \",\" +\n    // _devicedata_deviceId\n    \n    if(!device.system) device.system={};\n    device.system.chipId = parts[3];\n    device.system.cpuFreqMHz = parts[4];\n    device.system.flashChipVendorId = parts[5];\n    device.system.freeSketchSpace = parts[6];\n    device.system.sketchMD5 = parts[7];\n    device.system.vcc = parts[8];\n    \n    return device;\n}\nfunction parseRELAY(device, parts) {\n    //\"RELAY,\" + getVersion() + \",\" + ts + \",\" + RELAY_Report_PINS + \",\" +  _Relay_deviceId\n\n    if(!device.relay) {\n        device.relay = [];\n    }\n\n    var start = 3;\n    var end = parts.length - 2;\n    \n    for(var i = start;i<=end;i++) {\n        var relayid = parts[i];\n        var relay = findRelay(device, relayid);\n        if(!relay) {\n            device.relay.push({ id : parts[i], name : \"Unknown\" });\n        }\n    }\n\n    if(device.type) {\n        if(!device.type.includes(\"RELAY\")) {\n            device.type += \",RELAY\";\n        }\n    } else {\n        device.type = \"RELAY\";\n    }\n    return device;\n}\n\nfunction parseBMP280(device, parts) {\n    //\"BMP280,\" + getVersion() + \",\" + ts + \",\" + temp + \",\" + humidity + \",\"+ pressure + \",\"+ altitude + \",\" + _BMP280_deviceId\n    device.bmp280 = {\n        temp : Number(parts[3]),\n        humidity : Number(parts[4]),\n        pressure : Number(parts[5]),\n        altitude : Number(parts[6])\n    };\n    if(device.type) {\n        if(!device.type.includes(\"BMP280\")) {\n            device.type += \",BMP280\";\n        }\n    } else {\n        device.type = \"BMP280\";\n    }\n    return device;\n}\nfunction parseMQ135(device, parts) {\n    //\"MQ135,\" + getVersion() + \",\" + ts + \",\" + ratio +\",\" + airQuality + \",\" + _MQ135_deviceId\n    device.mq135 = {\n        ratio : Number(parts[3]),\n        co2 : Number(parts[4])\n    };\n    if(device.type) {\n        if(!device.type.includes(\"MQ135\")) {\n            device.type += \",MQ135\";\n        }\n    } else {\n        device.type = \"MQ135\";\n    }\n    return device;\n}\nfunction parseMQ4(device, parts) {\n    //\"MQ4,\" + getVersion() + \",\" + ts + \",\" + ratio +\",\" + methane, cng + \",\" + _MQ4_deviceId\n    device.mq4 = {\n        ratio : Number(parts[3]),\n        methane : Number(parts[4]),\n        cng : Number(parts[5])\n    };\n    if(device.type) {\n        if(!device.type.includes(\"MQ4\")) {\n            device.type += \",MQ4\";\n        }\n    } else {\n        device.type = \"MQ4\";\n    }\n    return device;\n}\nfunction parseMQ3(device, parts) {\n    //\"MQ3,\" + getVersion() + \",\" + ts + \",\" + ratio +\",\" + ppm, mgl + \",\" + _MQ4_deviceId\n    device.mq3 = {\n        ratio : Number(parts[3]),\n        alcoholPPM : Number(parts[4]),\n        alcoholMGL : Number(parts[5])\n    };\n    if(device.type) {\n        if(!device.type.includes(\"MQ3\")) {\n            device.type += \",MQ3\";\n        }\n    } else {\n        device.type = \"MQ3\";\n    }\n    return device;\n}\nfunction parseMQ8(device, parts) {\n    //\"MQ8,\" + getVersion() + \",\" + ts + \",\" + ratio +\",\" + hydrogen + \",\" + _MQ8_deviceId\n    device.mq8 = {\n        ratio : Number(parts[3]),\n        hydrogen : Number(parts[4])\n    };\n    if(device.type) {\n        if(!device.type.includes(\"MQ8\")) {\n            device.type += \",MQ8\";\n        }\n    } else {\n        device.type = \"MQ8\";\n    }\n    return device;\n}\nfunction parseMQ5(device, parts) {\n    //\"MQ5,\" + getVersion() + \",\" + ts + \",\" + ratio +\",\" + lpg, methane + \",\" + _MQ5_deviceId\n    device.mq5 = {\n        ratio : Number(parts[3]),\n        lpg : Number(parts[4]),\n        methane : Number(parts[5])\n    };\n    if(device.type) {\n        if(!device.type.includes(\"MQ5\")) {\n            device.type += \",MQ5\";\n        }\n    } else {\n        device.type = \"MQ5\";\n    }\n    return device;\n}\nfunction parseMQ6(device, parts) {\n    //\"MQ6,\" + getVersion() + \",\" + ts + \",\" + ratio +\",\" + lpg, butane + \",\" + _MQ7_deviceId\n    device.mq6 = {\n        ratio : Number(parts[3]),\n        lpg : Number(parts[4]),\n        butane : Number(parts[5])\n    };\n    if(device.type) {\n        if(!device.type.includes(\"MQ6\")) {\n            device.type += \",MQ6\";\n        }\n    } else {\n        device.type = \"MQ6\";\n    }\n    return device;\n}\nfunction parseMQ7(device, parts) {\n    //\"MQ7,\" + getVersion() + \",\" + ts + \",\" + ratio +\",\" + co + \",\" + _MQ7_deviceId\n    device.mq7 = {\n        ratio : Number(parts[3]),\n        co : Number(parts[4])\n    };\n    if(device.type) {\n        if(!device.type.includes(\"MQ7\")) {\n            device.type += \",MQ7\";\n        }\n    } else {\n        device.type = \"MQ7\";\n    }\n    return device;\n}\n\nfunction parseMQ2(device, parts) {\n    //\"MQ2,\" + getVersion() + \",\" + ts + \",\" + ratio +\",\" + lpg + \",\" + methane +\",\" + smoke +\",\" + hydrogen +\",\" + _MQ2_deviceId\n    device.mq2 = {\n        ratio : Number(parts[3]),\n        lpg : Number(parts[4]),\n        methane : Number(parts[5]),\n        smoke : Number(parts[6]),\n        hydrogen : Number(parts[7])\n    };\n    if(device.type) {\n        if(!device.type.includes(\"MQ2\")) {\n            device.type += \",MQ2\";\n        }\n    } else {\n        device.type = \"MQ2\";\n    }\n    return device;\n}\n\n\n\nfunction parseMQ9(device, parts) {\n    //\"MQ9,\" + getVersion() + \",\" + ts + \",\" + ratio +\",\" + lpg + \",\" + methane +\",\" + co  \",\" + _MQ2_deviceId\n    device.mq9 = {\n        ratio : Number(parts[3]),\n        lpg : Number(parts[4]),\n        methane : Number(parts[5]),\n        co : Number(parts[6])\n    };\n    if(device.type) {\n        if(!device.type.includes(\"MQ9\")) {\n            device.type += \",MQ9\";\n        }\n    } else {\n        device.type = \"MQ9\";\n    }\n    return device;\n}\n\n\nfunction parseDHT11(device, parts) {\n    //\"DHT11,\" + getVersion() + \",\" + ts + \",\" + temp + \",\" + humidity + \",\"+ heatIndex + \",\" + _DHT11_deviceId\n    device.dht11 = {\n        temp : Number(parts[3]),\n        humidity : Number(parts[4]),\n        headIndex : Number(parts[5])\n    };\n    if(device.type) {\n        if(!device.type.includes(\"DHT11\")) {\n            device.type += \",DHT11\";\n        }\n    } else {\n        device.type = \"DHT11\";\n    }\n    return device;\n}\n\nfunction parseDHT22(device, parts) {\n    //\"DHT22,\" + getVersion() + \",\" + ts + \",\" + temp + \",\" + humidity + \",\"+ heatIndex + \",\" + _DHT11_deviceId\n    device.dht22 = {\n        temp : Number(parts[3]),\n        humidity : Number(parts[4]),\n        headIndex : Number(parts[5])\n    };\n    if(device.type) {\n        if(!device.type.includes(\"DHT22\")) {\n            device.type += \",DHT22\";\n        }\n    } else {\n        device.type = \"DHT22\";\n    }\n    return device;\n}\n\nfunction findRelay(device, relayid) {\n    for(var r in device.relay) {\n        var relay = device.relay[r];\n        if(relay.id === relayid) {\n            return relay;\n        }\n    }\n    return;\n}\n\nfunction parseTMP36(device, parts) {\n    //\"TMP36,\" + getVersion() + \",\" + ts + \",\" + value + \",\" + diff + \",\" + _tmp36_deviceId\n    device.tmp36 = {\n        temp : Number(parts[3]),\n        diff : Number(parts[4])\n    };\n    if(device.type) {\n        if(!device.type.includes(\"TMP36\")) {\n            device.type += \",TMP36\";\n        }\n    } else {\n        device.type = \"TMP36\";\n    }\n    return device;\n}\n\n\nfunction parseMoisture(device, parts) {\n    //\"MOIST,\" + getVersion() + \",\" + ts + \",\" + moisture + \",\" + _MOIST_deviceId\n    device.moisture = {\n        level : Number(parts[3])\n    };\n    //just accomodate some badly calibrated sensors\n    //make sure you test value reading in and out of water.\n    if(device.moisture.level > 100) device.moisture.level = 100;\n    if(device.moisture.level < 0) device.moisture.level = 0;\n    \n    device.moisture.ts = device.ts;\n    device.moisture.timeStamp = device.timeStamp;\n    \n    if(device.type) {\n        if(!device.type.includes(\"MOIST\")) {\n            device.type += \",MOIST\";\n        }\n    } else {\n        device.type = \"MOIST\";\n    }\n    return device;\n}\n\nfunction parsePIR(device, parts) {\n    //\"PIR,\" + getVersion() + \",\" + ts + \",\" + movement + \",\" + _PIR_deviceId\n    if(device.pir) {\n        device.pir.movement.moved = (Number(parts[3]) == 1) ? true : false;\n    } else {\n        device.pir = {\n            movement : { moved : (Number(parts[3]) == 1) ? true : false }\n        }\n    }\n    if(device.pir.movement.moved === true) {\n        device.pir.movement.ts = device.ts;\n        device.pir.movement.timeStamp = device.timeStamp;\n    }\n    if(device.type) {\n        if(!device.type.includes(\"PIR\")) {\n            device.type += \",PIR\";\n        }\n    } else {\n        device.type = \"PIR\";\n    }\n\n    return device;\n}\n","outputs":1,"noerr":0,"x":290,"y":360,"wires":[["e08e5580.998438","3b1358c2.c271e8"]]},{"id":"c2f2f4f7.3241d","type":"inject","z":"5fe38bd6.a9e1a4","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"00 12 * * *","once":false,"onceDelay":0.1,"x":150,"y":40,"wires":[["f5eaa95d.bc6038"]]},{"id":"f5eaa95d.bc6038","type":"file in","z":"5fe38bd6.a9e1a4","name":"","filename":"/home/pi/.node-red/context/global/global.json","format":"utf8","chunk":false,"sendError":false,"encoding":"none","x":460,"y":40,"wires":[["e55cfa2.3dd7188","4246d7f8.4e11c"]]},{"id":"e55cfa2.3dd7188","type":"mqtt out","z":"5fe38bd6.a9e1a4","name":"","topic":"athos/backup/node-red/global","qos":"0","retain":"true","broker":"1fd1dcb7.25cbf3","x":830,"y":40,"wires":[]},{"id":"4246d7f8.4e11c","type":"debug","z":"5fe38bd6.a9e1a4","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":770,"y":100,"wires":[]},{"id":"36d72e7b.4addaa","type":"inject","z":"5fe38bd6.a9e1a4","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"00 12 * * *","once":false,"onceDelay":0.1,"x":150,"y":160,"wires":[["ae34bebc.b1c26"]]},{"id":"ae34bebc.b1c26","type":"file in","z":"5fe38bd6.a9e1a4","name":"","filename":"/home/pi/.node-red/flows_AthosIotHub.json","format":"utf8","chunk":false,"sendError":false,"encoding":"none","x":460,"y":160,"wires":[["d8bf764e.31fbd8","56e7936c.1b285c"]]},{"id":"d8bf764e.31fbd8","type":"mqtt out","z":"5fe38bd6.a9e1a4","name":"","topic":"athos/backup/node-red/flows","qos":"0","retain":"true","broker":"1fd1dcb7.25cbf3","x":820,"y":160,"wires":[]},{"id":"56e7936c.1b285c","type":"debug","z":"5fe38bd6.a9e1a4","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":770,"y":220,"wires":[]},{"id":"f64dbab3.509f28","type":"inject","z":"5fe38bd6.a9e1a4","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"00 12 * * *","once":false,"onceDelay":0.1,"x":150,"y":280,"wires":[["8832bdcf.5c2b38"]]},{"id":"8832bdcf.5c2b38","type":"file in","z":"5fe38bd6.a9e1a4","name":"","filename":"/home/pi/.node-red/settings.js","format":"utf8","chunk":false,"sendError":false,"encoding":"none","x":420,"y":280,"wires":[["4b7f1c72.ebb76c","e70f2ae2.feedc"]]},{"id":"4b7f1c72.ebb76c","type":"mqtt out","z":"5fe38bd6.a9e1a4","name":"","topic":"athos/backup/node-red/settings","qos":"0","retain":"true","broker":"1fd1dcb7.25cbf3","x":830,"y":280,"wires":[]},{"id":"e70f2ae2.feedc","type":"debug","z":"5fe38bd6.a9e1a4","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":770,"y":340,"wires":[]},{"id":"89ffff2c.7844b8","type":"catch","z":"4897ff02.3b57","name":"","scope":null,"uncaught":false,"x":80,"y":840,"wires":[["97a19a72.a86b88","a86e53f4.0efff"]]},{"id":"97a19a72.a86b88","type":"mqtt out","z":"4897ff02.3b57","name":"","topic":"athos/error/ui","qos":"2","retain":"false","broker":"1fd1dcb7.25cbf3","x":270,"y":840,"wires":[]},{"id":"a86e53f4.0efff","type":"debug","z":"4897ff02.3b57","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":250,"y":900,"wires":[]},{"id":"27d9716e.04bb06","type":"catch","z":"5fe38bd6.a9e1a4","name":"","scope":null,"uncaught":false,"x":160,"y":400,"wires":[["d337757e.c511b8","645b3e63.05e7f"]]},{"id":"d337757e.c511b8","type":"mqtt out","z":"5fe38bd6.a9e1a4","name":"","topic":"athos/error/backup","qos":"2","retain":"false","broker":"1fd1dcb7.25cbf3","x":370,"y":400,"wires":[]},{"id":"645b3e63.05e7f","type":"debug","z":"5fe38bd6.a9e1a4","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":330,"y":460,"wires":[]},{"id":"6aed9366.6d7ef4","type":"inject","z":"5fe38bd6.a9e1a4","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"onceDelay":0.1,"x":150,"y":560,"wires":[["292e7c0a.944cec"]]},{"id":"c1ccae3c.d6cf98","type":"function","z":"5fe38bd6.a9e1a4","name":"","func":"var date = new Date();\nvar ts = date.getTime();\n\n\nmsg.filename = \"/home/pi/.node-red/backup/flows_AthosHub-\"+ts+\".json\";\n\n\nreturn msg;","outputs":1,"noerr":0,"x":690,"y":560,"wires":[["7940914.7226c7"]]},{"id":"292e7c0a.944cec","type":"file in","z":"5fe38bd6.a9e1a4","name":"","filename":"/home/pi/.node-red/flows_AthosIotHub.json","format":"utf8","chunk":false,"sendError":false,"encoding":"none","x":430,"y":560,"wires":[["c1ccae3c.d6cf98"]]},{"id":"7940914.7226c7","type":"file","z":"5fe38bd6.a9e1a4","name":"","filename":"","appendNewline":false,"createDir":false,"overwriteFile":"true","encoding":"none","x":830,"y":560,"wires":[["e930ec7d.eaf86"]]},{"id":"e930ec7d.eaf86","type":"debug","z":"5fe38bd6.a9e1a4","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":970,"y":560,"wires":[]},{"id":"66d0ced8.ac6a1","type":"comment","z":"5fe38bd6.a9e1a4","name":"Local backup on each deploy.","info":"Feel free to change the output to whatever mechansim you like, for example remote FTP server.","x":180,"y":520,"wires":[]}]